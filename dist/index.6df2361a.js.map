{"mappings":"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","sources":["src/app/scripts/script.js"],"sourcesContent":["$(document).ready(function () {\n\n    getDocuments();\n\n    $('#send-button').on('click', sendMessage);\n\n    //code to send chat message to Azure Copilot\n    async function sendMessage() {\n        const userInput = $('#user-input').val();\n        if (!userInput) return;\n\n        displayMessage('User', userInput);\n        $('#user-input').val('');\n\n        const response = await fetch('https://eastus.api.cognitive.microsoft.com/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer 835bba103fea40c9adab54ee45dc6902'\n            },\n            body: JSON.stringify({ message: userInput })\n        });\n\n        const data = await response.json();\n        displayMessage('Azure Copilot', data.reply);\n    }\n\n    function displayMessage(sender, message) {\n        const chatDisplay = $('#chat-display');\n        const messageElement = $('<div>').text(`${sender}: ${message}`);\n        chatDisplay.append(messageElement);\n        chatDisplay.scrollTop(chatDisplay[0].scrollHeight);\n    }\n\n    //code to toggle between chat and document screens\n    function getQueryParam(param) {\n        const urlParams = new URLSearchParams(window.location.search);\n        return urlParams.get(param);\n    }\n\n    function toggleDisplay(screen) {\n        const $chatContainer = $('#chat-container');\n        const $documentContainer = $('#document-container');\n\n        if (screen === 'chat') {\n            $chatContainer.show();\n            $documentContainer.hide();\n        } else if (screen === 'documents') {\n            $chatContainer.hide();\n            $documentContainer.show();\n        } else {\n            $chatContainer.hide();\n            $documentContainer.hide();\n        }\n    }\n\n    const screen = getQueryParam('screen');\n    toggleDisplay(screen);\n\n    // Add event listeners to navigation links\n    $('#nav-container nav ul li a').on('click', function (event) {\n        event.preventDefault();\n        const screen = new URL(this.href).searchParams.get('screen');\n        toggleDisplay(screen);\n        history.pushState(null, '', this.href);\n    });\n\n    document.getElementById('file-input').addEventListener('change', function (event) {\n        const fileList = document.getElementById('file-list');\n        const noFilesPlaceholder = document.getElementById('no-files-placeholder');\n        const uploadButton = document.getElementById('upload-button');\n        fileList.innerHTML = ''; // Clear the list\n\n        const updatePlaceholder = () => {\n            const fileCount = document.getElementById('file-input').files.length;\n            if (fileCount === 0) {\n                noFilesPlaceholder.textContent = 'No files selected';\n                noFilesPlaceholder.style.display = 'block';\n                uploadButton.disabled = true;\n            } else {\n                noFilesPlaceholder.textContent = `${fileCount} file(s) selected`;\n                noFilesPlaceholder.style.display = 'block';\n                uploadButton.disabled = false;\n            }\n        };\n\n        updatePlaceholder();\n\n        Array.from(event.target.files).forEach((file, index) => {\n            const listItem = document.createElement('li');\n            listItem.textContent = file.name;\n\n            const removeButton = document.createElement('button');\n            removeButton.textContent = 'Remove';\n            removeButton.addEventListener('click', (e) => {\n                e.stopPropagation(); // Prevent triggering the file input click event\n\n                const filesArray = Array.from(document.getElementById('file-input').files);\n                filesArray.splice(index, 1);\n\n                const dataTransfer = new DataTransfer();\n                filesArray.forEach(file => dataTransfer.items.add(file));\n                document.getElementById('file-input').files = dataTransfer.files;\n\n                listItem.remove();\n                updatePlaceholder();\n\n                // Clear the file input if no files are left\n                if (filesArray.length === 0) {\n                    document.getElementById('file-input').value = '';\n                }\n            });\n\n            listItem.appendChild(removeButton);\n            fileList.appendChild(listItem);\n        });\n    });\n\n    // Trigger file input click when custom button is clicked\n    document.getElementById('choose-files-button').addEventListener('click', function (event) {\n        event.preventDefault(); // Prevent default button behavior\n        document.getElementById('file-input').click();\n    });\n\n    // Filter existing documents based on the name field\n    document.getElementById('filter-input').addEventListener('input', function (event) {\n        const filterValue = event.target.value.toLowerCase();\n        const documentRows = document.querySelectorAll('#document-list .document-row:not(.header)');\n\n        documentRows.forEach(row => {\n            const nameCell = row.querySelector('.document-cell:nth-child(3)');\n            if (nameCell.textContent.toLowerCase().includes(filterValue)) {\n                row.style.display = '';\n            } else {\n                row.style.display = 'none';\n            }\n        });\n    });\n});\n\nfunction getDocuments() {\n    // Fetch the list of blobs from the Azure Storage container\n    fetch(\"https://stdcdaiprodpoc001.blob.core.windows.net/?sv=2022-11-02&ss=bfqt&sp=rwdlacupiytfx&se=2024-10-02T14:42:41Z&st=2024-10-02T06:42:41Z&spr=https&srt=sco&sig=sWuQtbX2LVibdgi%2BCNcEkvfKP9BiskHO2I5OiAc3%2B%2BE%3D&comp=list\", {\n        method: 'GET',\n        mode: 'no-cors',\n        headers: {\n            'x-ms-version': '2020-04-08'\n        }\n    })\n        .then(response => response.text())\n        .then(data => {\n            // Parse the XML response\n            const parser = new DOMParser();\n            const xmlDoc = parser.parseFromString(data, \"application/xml\");\n            const blobs = xmlDoc.getElementsByTagName(\"Blob\");\n\n            // Iterate over the blobs and process them\n            const fileList = document.getElementById('file-list');\n            Array.from(blobs).forEach(blob => {\n                const blobName = blob.getElementsByTagName(\"Name\")[0].textContent;\n                const listItem = document.createElement('li');\n                listItem.textContent = blobName;\n                fileList.appendChild(listItem);\n            });\n        })\n        .catch(error => console.error('Error:', error));\n}"],"names":[],"version":3,"file":"index.6df2361a.js.map","sourceRoot":"/__parcel_source_root/"}